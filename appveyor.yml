version: '{build}'

clone_depth: 5

environment:
  access_token:
    secure: T7XuBtHDu85Tk/d1AeyfhW3CVyzaoddTWmR4xsPIdQ3di0R6x8ncWqw3KrYXkWJm

  conda_access_token:
    secure: d+v++uejbVEhIuaJSuFIOA==
  matrix:
  - PYTHON_VERSION: 3.6
    PYTHON_ARCH: "64"
    MINICONDA: C:\Miniconda36-x64

init:
- cmd: ''

install:
  # Add Miniconda to the PATH
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"

  # Setup always yes
  - conda config --set always_yes yes --set changeps1 no

  # Quietly update if needed
  # - conda update -q conda

  # Display conda version
  - conda info -a

  # If this is a tag build, we will need to upload a deployment, set up login
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (conda install conda-build anaconda-client)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (anaconda login --username sleap --password %conda_access_token%)
  - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (conda config --set anaconda_upload yes)

  # Take the environment.yml but replace tensorflow-gpu with tensorflow,
  # we don't have GPUs on appveyor nodes and this will make
  # building the environment faster.
  - ps: (Get-Content -path .\environment.yml -Raw) -replace 'tensorflow-gpu','tensorflow' | Set-Content -Path environment_appveyor.yml

  # Create/update the sleap environment in case some dependencies changed.
  - conda env create -n sleap_appveyor -f environment_appveyor.yml

  # Activate things
  - activate sleap_appveyor

  # Conda Explicit Spec files don't include pip installed stuff.
  # See: https://github.com/conda/conda/issues/8372
  # We need to install this separately, what a mess.
  # - pip install PySide2 opencv-python imgaug cattrs

# Install dev requirements too.
  - pip install -r dev_requirements.txt

build: off
test_script:
  - cmd: activate sleap_appveyor
  - cmd: where python
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - cmd: python -m pytest tests/


# here we are going to override common configuration
for:

# override settings for `master` branch
-
  branches:
    only:
      - master

  # Build and deploy our documentation. This involves checking out
  # the repo, switching to the github pages branch, building the docs
  # from to gh-pages branch and pushing. See:
  # https://daler.github.io/sphinxdoc-test/includeme.html
  # for details on how to set this up.
  deploy_script:
    - git config --global credential.helper store
    - ps: Add-Content "$HOME\.git-credentials" "https://x-oauth-basic:$($env:access_token)@github.com`n" 
    - git config --global user.email "dmturner@princeton.edu"
    - git config --global user.name "David Turner"
    - activate sleap_appveyor
    - cd ..\
    - mkdir sleap-docs
    - cd sleap-docs
    - git clone https://github.com/murthylab/sleap.git html
    - cd html
    - git remote set-url origin https://x-oauth-basic@github.com/murthylab/sleap.git
    - git checkout -b gh-pages remotes/origin/gh-pages
    - git remote -v
    - cd ..\..\sleap\docs
    - make html push

  # Deploy the windows conda package to the sleap channel, only on tagged
  # builds though.
  after_deploy:
    - cmd: cd ..\
    - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    - cmd: IF "%APPVEYOR_REPO_TAG%" == "true" (conda build .conda)
